version: '3.8'

services:
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME:-transcription-files}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - CORS_ORIGINS=*
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./temp_uploads:/app/temp_uploads
      - ${GOOGLE_APPLICATION_CREDENTIALS:-./gcp-credentials.json}:/app/gcp-credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME:-transcription-files}
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ${GOOGLE_APPLICATION_CREDENTIALS:-./gcp-credentials.json}:/app/gcp-credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
    deploy:
      replicas: 2

volumes:
  redis_data: